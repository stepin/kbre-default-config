#!/usr/bin/env bash
set -eEuo pipefail
cd "$(dirname "$0")"

cd ..

VERSION=$(git describe --tags --always)
IMAGE_LATEST="stepin/%ARTIFACT%"
IMAGE="$IMAGE_LATEST:$VERSION"

export VERSION
./bin/set-version

./gradlew build

rm -rf ./dist || true
mkdir ./dist

mkdir ./dist/linuxX64
cp LICENSE README.md ./dist/linuxX64/
cp build/bin/linuxX64/releaseExecutable/%ARTIFACT%.kexe ./dist/linuxX64/%ARTIFACT%
pushd ./dist/linuxX64
zip -9 ../%ARTIFACT%-linuxX64.zip *
popd

mkdir ./dist/linuxArm64
cp LICENSE README.md ./dist/linuxArm64/
cp build/bin/linuxArm64/releaseExecutable/%ARTIFACT%.kexe ./dist/linuxArm64/%ARTIFACT%
pushd ./dist/linuxArm64
zip -9 ../%ARTIFACT%-linuxArm64.zip *
popd

mkdir ./dist/macosX64
cp LICENSE README.md ./dist/macosX64/
cp build/bin/macosX64/releaseExecutable/%ARTIFACT%.kexe ./dist/macosX64/%ARTIFACT%
pushd ./dist/macosX64
zip -9 ../%ARTIFACT%-macosX64.zip *
popd

mkdir ./dist/macosArm64
cp LICENSE README.md ./dist/macosArm64/
cp build/bin/macosArm64/releaseExecutable/%ARTIFACT%.kexe ./dist/macosArm64/%ARTIFACT%
pushd ./dist/macosArm64
zip -9 ../%ARTIFACT%-macosArm64.zip *
popd

[[ ! -h build/bin/linux-amd64 ]] && ln -sn linuxX64 build/bin/linux-amd64
[[ ! -h build/bin/linux-arm64 ]] && ln -sn linuxArm64 build/bin/linux-arm64
docker buildx create --use
docker buildx build --push --platform linux/amd64,linux/arm64 -f Dockerfile.embed . -t "$IMAGE" -t "$IMAGE_LATEST"

./bin/update-local-installation
